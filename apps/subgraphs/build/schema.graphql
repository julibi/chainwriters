type Edition @entity {
  id: ID!
  project: Project!
  edition: BigInt!
  startId: BigInt
  endId: BigInt
  mintPrice: BigInt
}

type Contributor @entity {
  id: ID!
  project: Project!
  address: Bytes!
  role: String
  sharePercentage: BigInt!
}

type Mint @entity {
  id: ID!
  project: Project!
  edition: BigInt!
  receiver: Bytes!
  tokenId: BigInt!
}

type Voting @entity {
  id: ID!
  project: Project!
  proposal: String!
  option1: String!
  option2: String!
  option3: String!
  option1Count: BigInt!
  option2Count: BigInt!
  option3Count: BigInt!
  totalCount: BigInt!
  voteStarted: BigInt!
  voteEnding: BigInt!
  isVoting: Boolean!
}

type Project @entity {
  id: ID!
  creator: Bytes!
  royaltiesSplitter: Bytes!
  createdAt: BigInt!
  title: String!
  textIpfsHash: String!
  translationIpfsHash: String
  imgIpfsHash: String
  animationIpfsHash: String
  blurbIpfsHash: String
  initialMintPrice: BigInt!
  firstEditionAmount: BigInt!
  originalLanguage: String
  subtitle: String
  genre: String
  auctionsStarted: Boolean!
  auctionsEnded: Boolean!
  startId: BigInt
  endId: BigInt
  currentId: BigInt!
  balance: BigInt!
  isCurated: Boolean
  isFrozen: Boolean
  isPaused: Boolean
  isDeleted: Boolean
  premintedByAuthor: BigInt
  mintCount: BigInt!
  currentAuctionExpiresAt: BigInt
  minted: [Mint!] @derivedFrom(field: "project")
  contributors: [Contributor!] @derivedFrom(field: "project")
  editions: [Edition!] @derivedFrom(field: "project")
  ballotAddress: Bytes
  ballotCreated: BigInt
  votings: [Voting!] @derivedFrom(field: "project")
}
