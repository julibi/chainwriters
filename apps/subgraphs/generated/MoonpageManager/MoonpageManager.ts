// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BalanceDecreased extends ethereum.Event {
  get params(): BalanceDecreased__Params {
    return new BalanceDecreased__Params(this);
  }
}

export class BalanceDecreased__Params {
  _event: BalanceDecreased;

  constructor(event: BalanceDecreased) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BalanceIncreased extends ethereum.Event {
  get params(): BalanceIncreased__Params {
    return new BalanceIncreased__Params(this);
  }
}

export class BalanceIncreased__Params {
  _event: BalanceIncreased;

  constructor(event: BalanceIncreased) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class BaseDataFrozen extends ethereum.Event {
  get params(): BaseDataFrozen__Params {
    return new BaseDataFrozen__Params(this);
  }
}

export class BaseDataFrozen__Params {
  _event: BaseDataFrozen;

  constructor(event: BaseDataFrozen) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get frozen(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Configured extends ethereum.Event {
  get params(): Configured__Params {
    return new Configured__Params(this);
  }
}

export class Configured__Params {
  _event: Configured;

  constructor(event: Configured) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get imgHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get animationHash(): string {
    return this._event.parameters[2].value.toString();
  }

  get blurbHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get newGenre(): string {
    return this._event.parameters[4].value.toString();
  }

  get newSubtitle(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class ContributorAdded extends ethereum.Event {
  get params(): ContributorAdded__Params {
    return new ContributorAdded__Params(this);
  }
}

export class ContributorAdded__Params {
  _event: ContributorAdded;

  constructor(event: ContributorAdded) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get contributor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get share(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get role(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class Curated extends ethereum.Event {
  get params(): Curated__Params {
    return new Curated__Params(this);
  }
}

export class Curated__Params {
  _event: Curated;

  constructor(event: Curated) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isCurated(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class NextEditionEnabled extends ethereum.Event {
  get params(): NextEditionEnabled__Params {
    return new NextEditionEnabled__Params(this);
  }
}

export class NextEditionEnabled__Params {
  _event: NextEditionEnabled;

  constructor(event: NextEditionEnabled) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get editionId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxSupply(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get mintPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get startId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get endId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isPaused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Paused1 extends ethereum.Event {
  get params(): Paused1__Params {
    return new Paused1__Params(this);
  }
}

export class Paused1__Params {
  _event: Paused1;

  constructor(event: Paused1) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PremintedByAuthor extends ethereum.Event {
  get params(): PremintedByAuthor__Params {
    return new PremintedByAuthor__Params(this);
  }
}

export class PremintedByAuthor__Params {
  _event: PremintedByAuthor;

  constructor(event: PremintedByAuthor) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RangeSet extends ethereum.Event {
  get params(): RangeSet__Params {
    return new RangeSet__Params(this);
  }
}

export class RangeSet__Params {
  _event: RangeSet;

  constructor(event: RangeSet) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TextSet extends ethereum.Event {
  get params(): TextSet__Params {
    return new TextSet__Params(this);
  }
}

export class TextSet__Params {
  _event: TextSet;

  constructor(event: TextSet) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get textHash(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TokenIdIncreased extends ethereum.Event {
  get params(): TokenIdIncreased__Params {
    return new TokenIdIncreased__Params(this);
  }
}

export class TokenIdIncreased__Params {
  _event: TokenIdIncreased;

  constructor(event: TokenIdIncreased) {
    this._event = event;
  }

  get projectId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MoonpageManager__authorSharesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class MoonpageManager__baseDatasResult {
  value0: string;
  value1: string;
  value2: string;
  value3: Address;
  value4: Address;
  value5: string;
  value6: string;
  value7: string;
  value8: string;
  value9: string;
  value10: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: Address,
    value4: Address,
    value5: string,
    value6: string,
    value7: string,
    value8: string,
    value9: string,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }
}

export class MoonpageManager__contributionsResult {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: string, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class MoonpageManager__editionsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class MoonpageManager__readAuthorShareResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class MoonpageManager__readBaseDataResult {
  value0: string;
  value1: string;
  value2: string;
  value3: Address;
  value4: Address;
  value5: string;
  value6: string;
  value7: string;
  value8: string;
  value9: string;
  value10: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: Address,
    value4: Address,
    value5: string,
    value6: string,
    value7: string,
    value8: string,
    value9: string,
    value10: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    map.set("value7", ethereum.Value.fromString(this.value7));
    map.set("value8", ethereum.Value.fromString(this.value8));
    map.set("value9", ethereum.Value.fromString(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    return map;
  }
}

export class MoonpageManager__readContributionResult {
  value0: Address;
  value1: string;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: string, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class MoonpageManager__readEditionDataResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }
}

export class MoonpageManager extends ethereum.SmartContract {
  static bind(address: Address): MoonpageManager {
    return new MoonpageManager("MoonpageManager", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UPGRADER_ROLE(): Bytes {
    let result = super.call("UPGRADER_ROLE", "UPGRADER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UPGRADER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "UPGRADER_ROLE",
      "UPGRADER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  authorShares(param0: BigInt): MoonpageManager__authorSharesResult {
    let result = super.call(
      "authorShares",
      "authorShares(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MoonpageManager__authorSharesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_authorShares(
    param0: BigInt
  ): ethereum.CallResult<MoonpageManager__authorSharesResult> {
    let result = super.tryCall(
      "authorShares",
      "authorShares(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__authorSharesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  baseDatas(param0: BigInt): MoonpageManager__baseDatasResult {
    let result = super.call(
      "baseDatas",
      "baseDatas(uint256):(string,string,string,address,address,string,string,string,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MoonpageManager__baseDatasResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toString(),
      result[6].toString(),
      result[7].toString(),
      result[8].toString(),
      result[9].toString(),
      result[10].toBigInt()
    );
  }

  try_baseDatas(
    param0: BigInt
  ): ethereum.CallResult<MoonpageManager__baseDatasResult> {
    let result = super.tryCall(
      "baseDatas",
      "baseDatas(uint256):(string,string,string,address,address,string,string,string,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__baseDatasResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toString(),
        value[6].toString(),
        value[7].toString(),
        value[8].toString(),
        value[9].toString(),
        value[10].toBigInt()
      )
    );
  }

  collection(): Address {
    let result = super.call("collection", "collection():(address)", []);

    return result[0].toAddress();
  }

  try_collection(): ethereum.CallResult<Address> {
    let result = super.tryCall("collection", "collection():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  contributions(
    param0: BigInt,
    param1: BigInt
  ): MoonpageManager__contributionsResult {
    let result = super.call(
      "contributions",
      "contributions(uint256,uint256):(address,string,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new MoonpageManager__contributionsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_contributions(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<MoonpageManager__contributionsResult> {
    let result = super.tryCall(
      "contributions",
      "contributions(uint256,uint256):(address,string,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__contributionsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  contributionsIndeces(param0: BigInt): i32 {
    let result = super.call(
      "contributionsIndeces",
      "contributionsIndeces(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toI32();
  }

  try_contributionsIndeces(param0: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "contributionsIndeces",
      "contributionsIndeces(uint256):(uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  curatedProjectIds(param0: BigInt): boolean {
    let result = super.call(
      "curatedProjectIds",
      "curatedProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_curatedProjectIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "curatedProjectIds",
      "curatedProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  editionOfToken(_projectId: BigInt, _tokenId: BigInt): BigInt {
    let result = super.call(
      "editionOfToken",
      "editionOfToken(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return result[0].toBigInt();
  }

  try_editionOfToken(
    _projectId: BigInt,
    _tokenId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionOfToken",
      "editionOfToken(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editionRanges(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "editionRanges",
      "editionRanges(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_editionRanges(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "editionRanges",
      "editionRanges(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  editions(param0: BigInt): MoonpageManager__editionsResult {
    let result = super.call(
      "editions",
      "editions(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new MoonpageManager__editionsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_editions(
    param0: BigInt
  ): ethereum.CallResult<MoonpageManager__editionsResult> {
    let result = super.tryCall(
      "editions",
      "editions(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__editionsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  existingProjectIds(param0: BigInt): boolean {
    let result = super.call(
      "existingProjectIds",
      "existingProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_existingProjectIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "existingProjectIds",
      "existingProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  exists(_projectId: BigInt): boolean {
    let result = super.call("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_projectId)
    ]);

    return result[0].toBoolean();
  }

  try_exists(_projectId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("exists", "exists(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_projectId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  factory(): Address {
    let result = super.call("factory", "factory():(address)", []);

    return result[0].toAddress();
  }

  try_factory(): ethereum.CallResult<Address> {
    let result = super.tryCall("factory", "factory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  frozenProjectIds(param0: BigInt): boolean {
    let result = super.call(
      "frozenProjectIds",
      "frozenProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_frozenProjectIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "frozenProjectIds",
      "frozenProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isFrozen(_projectId: BigInt): boolean {
    let result = super.call("isFrozen", "isFrozen(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_projectId)
    ]);

    return result[0].toBoolean();
  }

  try_isFrozen(_projectId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isFrozen", "isFrozen(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_projectId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPaused(_projectId: BigInt): boolean {
    let result = super.call("isPaused", "isPaused(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_projectId)
    ]);

    return result[0].toBoolean();
  }

  try_isPaused(_projectId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(_projectId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxAmountEdition(): BigInt {
    let result = super.call(
      "maxAmountEdition",
      "maxAmountEdition():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxAmountEdition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxAmountEdition",
      "maxAmountEdition():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minPrice(): BigInt {
    let result = super.call("minPrice", "minPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minPrice", "minPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  moonpageDev(): Address {
    let result = super.call("moonpageDev", "moonpageDev():(address)", []);

    return result[0].toAddress();
  }

  try_moonpageDev(): ethereum.CallResult<Address> {
    let result = super.tryCall("moonpageDev", "moonpageDev():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pausedProjectIds(param0: BigInt): boolean {
    let result = super.call(
      "pausedProjectIds",
      "pausedProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBoolean();
  }

  try_pausedProjectIds(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "pausedProjectIds",
      "pausedProjectIds(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  projectBalances(param0: BigInt): BigInt {
    let result = super.call(
      "projectBalances",
      "projectBalances(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_projectBalances(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectBalances",
      "projectBalances(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectIdOfToken(_tokenId: BigInt): BigInt {
    let result = super.call(
      "projectIdOfToken",
      "projectIdOfToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );

    return result[0].toBigInt();
  }

  try_projectIdOfToken(_tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectIdOfToken",
      "projectIdOfToken(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  projectsLength(): BigInt {
    let result = super.call("projectsLength", "projectsLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_projectsLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "projectsLength",
      "projectsLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  readAuthorShare(_projectId: BigInt): MoonpageManager__readAuthorShareResult {
    let result = super.call(
      "readAuthorShare",
      "readAuthorShare(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new MoonpageManager__readAuthorShareResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_readAuthorShare(
    _projectId: BigInt
  ): ethereum.CallResult<MoonpageManager__readAuthorShareResult> {
    let result = super.tryCall(
      "readAuthorShare",
      "readAuthorShare(uint256):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__readAuthorShareResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  readBaseData(_projectId: BigInt): MoonpageManager__readBaseDataResult {
    let result = super.call(
      "readBaseData",
      "readBaseData(uint256):(string,string,string,address,address,string,string,string,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new MoonpageManager__readBaseDataResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toAddress(),
      result[4].toAddress(),
      result[5].toString(),
      result[6].toString(),
      result[7].toString(),
      result[8].toString(),
      result[9].toString(),
      result[10].toBigInt()
    );
  }

  try_readBaseData(
    _projectId: BigInt
  ): ethereum.CallResult<MoonpageManager__readBaseDataResult> {
    let result = super.tryCall(
      "readBaseData",
      "readBaseData(uint256):(string,string,string,address,address,string,string,string,string,string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__readBaseDataResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toAddress(),
        value[4].toAddress(),
        value[5].toString(),
        value[6].toString(),
        value[7].toString(),
        value[8].toString(),
        value[9].toString(),
        value[10].toBigInt()
      )
    );
  }

  readContribution(
    _projectId: BigInt,
    _index: BigInt
  ): MoonpageManager__readContributionResult {
    let result = super.call(
      "readContribution",
      "readContribution(uint256,uint256):(address,string,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );

    return new MoonpageManager__readContributionResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_readContribution(
    _projectId: BigInt,
    _index: BigInt
  ): ethereum.CallResult<MoonpageManager__readContributionResult> {
    let result = super.tryCall(
      "readContribution",
      "readContribution(uint256,uint256):(address,string,uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_projectId),
        ethereum.Value.fromUnsignedBigInt(_index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__readContributionResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  readContributionIndex(_projectId: BigInt): BigInt {
    let result = super.call(
      "readContributionIndex",
      "readContributionIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_readContributionIndex(_projectId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "readContributionIndex",
      "readContributionIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  readEditionData(_projectId: BigInt): MoonpageManager__readEditionDataResult {
    let result = super.call(
      "readEditionData",
      "readEditionData(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return new MoonpageManager__readEditionDataResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_readEditionData(
    _projectId: BigInt
  ): ethereum.CallResult<MoonpageManager__readEditionDataResult> {
    let result = super.tryCall(
      "readEditionData",
      "readEditionData(uint256):(uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MoonpageManager__readEditionDataResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  readProjectBalance(_projectId: BigInt): BigInt {
    let result = super.call(
      "readProjectBalance",
      "readProjectBalance(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );

    return result[0].toBigInt();
  }

  try_readProjectBalance(_projectId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "readProjectBalance",
      "readProjectBalance(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_projectId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddContributorsCall extends ethereum.Call {
  get inputs(): AddContributorsCall__Inputs {
    return new AddContributorsCall__Inputs(this);
  }

  get outputs(): AddContributorsCall__Outputs {
    return new AddContributorsCall__Outputs(this);
  }
}

export class AddContributorsCall__Inputs {
  _call: AddContributorsCall;

  constructor(call: AddContributorsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _contributors(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _shares(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _roles(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }
}

export class AddContributorsCall__Outputs {
  _call: AddContributorsCall;

  constructor(call: AddContributorsCall) {
    this._call = call;
  }
}

export class ConfigureProjectDetailsCall extends ethereum.Call {
  get inputs(): ConfigureProjectDetailsCall__Inputs {
    return new ConfigureProjectDetailsCall__Inputs(this);
  }

  get outputs(): ConfigureProjectDetailsCall__Outputs {
    return new ConfigureProjectDetailsCall__Outputs(this);
  }
}

export class ConfigureProjectDetailsCall__Inputs {
  _call: ConfigureProjectDetailsCall;

  constructor(call: ConfigureProjectDetailsCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _imgHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _animationHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _blurbHash(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _genre(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _subtitle(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class ConfigureProjectDetailsCall__Outputs {
  _call: ConfigureProjectDetailsCall;

  constructor(call: ConfigureProjectDetailsCall) {
    this._call = call;
  }
}

export class DistributeSharesCall extends ethereum.Call {
  get inputs(): DistributeSharesCall__Inputs {
    return new DistributeSharesCall__Inputs(this);
  }

  get outputs(): DistributeSharesCall__Outputs {
    return new DistributeSharesCall__Outputs(this);
  }
}

export class DistributeSharesCall__Inputs {
  _call: DistributeSharesCall;

  constructor(call: DistributeSharesCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DistributeSharesCall__Outputs {
  _call: DistributeSharesCall;

  constructor(call: DistributeSharesCall) {
    this._call = call;
  }
}

export class EmergencyWithdrawCall extends ethereum.Call {
  get inputs(): EmergencyWithdrawCall__Inputs {
    return new EmergencyWithdrawCall__Inputs(this);
  }

  get outputs(): EmergencyWithdrawCall__Outputs {
    return new EmergencyWithdrawCall__Outputs(this);
  }
}

export class EmergencyWithdrawCall__Inputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EmergencyWithdrawCall__Outputs {
  _call: EmergencyWithdrawCall;

  constructor(call: EmergencyWithdrawCall) {
    this._call = call;
  }
}

export class EnableNextEditionCall extends ethereum.Call {
  get inputs(): EnableNextEditionCall__Inputs {
    return new EnableNextEditionCall__Inputs(this);
  }

  get outputs(): EnableNextEditionCall__Outputs {
    return new EnableNextEditionCall__Outputs(this);
  }
}

export class EnableNextEditionCall__Inputs {
  _call: EnableNextEditionCall;

  constructor(call: EnableNextEditionCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newEdAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newEdMintPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class EnableNextEditionCall__Outputs {
  _call: EnableNextEditionCall;

  constructor(call: EnableNextEditionCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class IncreaseBalanceCall extends ethereum.Call {
  get inputs(): IncreaseBalanceCall__Inputs {
    return new IncreaseBalanceCall__Inputs(this);
  }

  get outputs(): IncreaseBalanceCall__Outputs {
    return new IncreaseBalanceCall__Outputs(this);
  }
}

export class IncreaseBalanceCall__Inputs {
  _call: IncreaseBalanceCall;

  constructor(call: IncreaseBalanceCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseBalanceCall__Outputs {
  _call: IncreaseBalanceCall;

  constructor(call: IncreaseBalanceCall) {
    this._call = call;
  }
}

export class IncreaseCurrentTokenIdCall extends ethereum.Call {
  get inputs(): IncreaseCurrentTokenIdCall__Inputs {
    return new IncreaseCurrentTokenIdCall__Inputs(this);
  }

  get outputs(): IncreaseCurrentTokenIdCall__Outputs {
    return new IncreaseCurrentTokenIdCall__Outputs(this);
  }
}

export class IncreaseCurrentTokenIdCall__Inputs {
  _call: IncreaseCurrentTokenIdCall;

  constructor(call: IncreaseCurrentTokenIdCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseCurrentTokenIdCall__Outputs {
  _call: IncreaseCurrentTokenIdCall;

  constructor(call: IncreaseCurrentTokenIdCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAddressesCall extends ethereum.Call {
  get inputs(): SetAddressesCall__Inputs {
    return new SetAddressesCall__Inputs(this);
  }

  get outputs(): SetAddressesCall__Outputs {
    return new SetAddressesCall__Outputs(this);
  }
}

export class SetAddressesCall__Inputs {
  _call: SetAddressesCall;

  constructor(call: SetAddressesCall) {
    this._call = call;
  }

  get _collection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _factory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _deployer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetAddressesCall__Outputs {
  _call: SetAddressesCall;

  constructor(call: SetAddressesCall) {
    this._call = call;
  }
}

export class SetIsBaseDataFrozenCall extends ethereum.Call {
  get inputs(): SetIsBaseDataFrozenCall__Inputs {
    return new SetIsBaseDataFrozenCall__Inputs(this);
  }

  get outputs(): SetIsBaseDataFrozenCall__Outputs {
    return new SetIsBaseDataFrozenCall__Outputs(this);
  }
}

export class SetIsBaseDataFrozenCall__Inputs {
  _call: SetIsBaseDataFrozenCall;

  constructor(call: SetIsBaseDataFrozenCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _shouldBeFrozen(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetIsBaseDataFrozenCall__Outputs {
  _call: SetIsBaseDataFrozenCall;

  constructor(call: SetIsBaseDataFrozenCall) {
    this._call = call;
  }
}

export class SetIsCuratedCall extends ethereum.Call {
  get inputs(): SetIsCuratedCall__Inputs {
    return new SetIsCuratedCall__Inputs(this);
  }

  get outputs(): SetIsCuratedCall__Outputs {
    return new SetIsCuratedCall__Outputs(this);
  }
}

export class SetIsCuratedCall__Inputs {
  _call: SetIsCuratedCall;

  constructor(call: SetIsCuratedCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetIsCuratedCall__Outputs {
  _call: SetIsCuratedCall;

  constructor(call: SetIsCuratedCall) {
    this._call = call;
  }
}

export class SetIsPausedCall extends ethereum.Call {
  get inputs(): SetIsPausedCall__Inputs {
    return new SetIsPausedCall__Inputs(this);
  }

  get outputs(): SetIsPausedCall__Outputs {
    return new SetIsPausedCall__Outputs(this);
  }
}

export class SetIsPausedCall__Inputs {
  _call: SetIsPausedCall;

  constructor(call: SetIsPausedCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _state(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetIsPausedCall__Outputs {
  _call: SetIsPausedCall;

  constructor(call: SetIsPausedCall) {
    this._call = call;
  }
}

export class SetMaxAmountEditionCall extends ethereum.Call {
  get inputs(): SetMaxAmountEditionCall__Inputs {
    return new SetMaxAmountEditionCall__Inputs(this);
  }

  get outputs(): SetMaxAmountEditionCall__Outputs {
    return new SetMaxAmountEditionCall__Outputs(this);
  }
}

export class SetMaxAmountEditionCall__Inputs {
  _call: SetMaxAmountEditionCall;

  constructor(call: SetMaxAmountEditionCall) {
    this._call = call;
  }

  get _newMaxAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxAmountEditionCall__Outputs {
  _call: SetMaxAmountEditionCall;

  constructor(call: SetMaxAmountEditionCall) {
    this._call = call;
  }
}

export class SetMinPriceCall extends ethereum.Call {
  get inputs(): SetMinPriceCall__Inputs {
    return new SetMinPriceCall__Inputs(this);
  }

  get outputs(): SetMinPriceCall__Outputs {
    return new SetMinPriceCall__Outputs(this);
  }
}

export class SetMinPriceCall__Inputs {
  _call: SetMinPriceCall;

  constructor(call: SetMinPriceCall) {
    this._call = call;
  }

  get _minPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinPriceCall__Outputs {
  _call: SetMinPriceCall;

  constructor(call: SetMinPriceCall) {
    this._call = call;
  }
}

export class SetPremintedByCreatorCall extends ethereum.Call {
  get inputs(): SetPremintedByCreatorCall__Inputs {
    return new SetPremintedByCreatorCall__Inputs(this);
  }

  get outputs(): SetPremintedByCreatorCall__Outputs {
    return new SetPremintedByCreatorCall__Outputs(this);
  }
}

export class SetPremintedByCreatorCall__Inputs {
  _call: SetPremintedByCreatorCall;

  constructor(call: SetPremintedByCreatorCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _premintedByCreator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPremintedByCreatorCall__Outputs {
  _call: SetPremintedByCreatorCall;

  constructor(call: SetPremintedByCreatorCall) {
    this._call = call;
  }
}

export class SetTextIpfsHashCall extends ethereum.Call {
  get inputs(): SetTextIpfsHashCall__Inputs {
    return new SetTextIpfsHashCall__Inputs(this);
  }

  get outputs(): SetTextIpfsHashCall__Outputs {
    return new SetTextIpfsHashCall__Outputs(this);
  }
}

export class SetTextIpfsHashCall__Inputs {
  _call: SetTextIpfsHashCall;

  constructor(call: SetTextIpfsHashCall) {
    this._call = call;
  }

  get _projectId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTextIpfsHashCall__Outputs {
  _call: SetTextIpfsHashCall;

  constructor(call: SetTextIpfsHashCall) {
    this._call = call;
  }
}

export class SetupDaoCall extends ethereum.Call {
  get inputs(): SetupDaoCall__Inputs {
    return new SetupDaoCall__Inputs(this);
  }

  get outputs(): SetupDaoCall__Outputs {
    return new SetupDaoCall__Outputs(this);
  }
}

export class SetupDaoCall__Inputs {
  _call: SetupDaoCall;

  constructor(call: SetupDaoCall) {
    this._call = call;
  }

  get _caller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _royaltiesSplitter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _projectId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _title(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _textCID(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _originalLanguage(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _initialMintPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _firstEditionAmount(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class SetupDaoCall__Outputs {
  _call: SetupDaoCall;

  constructor(call: SetupDaoCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
